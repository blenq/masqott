[tox]
requires = tox>=4
env_list =
    lint
    type
    py{{env:PY_VERSIONS:37,38,39,310,311,312}}-port{{env:MQTTPORTS:1883,2883}}
labels =
    test = py{37,38,39,310,311,312}-port{1883,2883}
    coverage = coverage-py{37,38,39,310,311,312}-port{{env:MQTTPORTS:1883,2883}},coverage-combine


[testenv]
description = run unit tests
deps =
    py37: later
package = wheel
wheel_build_env = {package_env}
set_env =
    port1883: MQTTTESTPORT = 1883
    port2883: MQTTTESTPORT = 2883
commands = python -m unittest


[testenv:lint]
description = run pylint
base_python = 311
skip_install = true
deps = pylint
commands = pylint masqott


[testenv:type]
description = run type checker
skip_install = true
deps = mypy
commands = mypy


[testenv:coverage-py{37,38,39,310,311,312}-port{1883,2883}]
description = run coverage
skip_install = true
deps =
    py37: later
    coverage[toml]
set_env =
    port1883: MQTTTESTPORT = 1883
    port2883: MQTTTESTPORT = 2883
commands =
    coverage run --data-file=.coverage.{py_dot_ver}_{env:MQTTTESTPORT}


[testenv:coverage-combine]
description = combine coverage results
skip_install = true
deps =
    coverage[toml]
depends = coverage-py{37,38,39,310,311,312}-port{1883,2883}
commands =
    coverage combine
    coverage html
